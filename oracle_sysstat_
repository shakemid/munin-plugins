#!/bin/bash
# -*- sh -*-

: << =cut

=head1 NAME

  oracle_sysstat_* - Munin plugin to monitor Oracle Statistics

    cursor       - To monitor Oracle Open Cursor
    execute      - To monitor Oracle Execute Count
    parse        - To monitor Oracle Parse Count
    physicaliops - To monitor Oracle Physical I/O Requests
    physicalrw   - To monitor Oracle Physical Read/Write
    sort         - To monitor Oracle Sorts
    tablescan    - To monitor Oracle Table Scans
    transaction  - To monitor Oracle Transactions
    sgainfo      - To monitor Oracle SGA
    pgastat      - To monitor Oracle PGA
    cachehit     - To monitor Oracle Cache Hit Ratio
    tablespace   - To monitor Oracle Table Space Usage

=head1 CONFIGURATION

  To get a list of symlinks that can be created, run:   

    ./oracle_sysstat_ suggest

  Make symlinks:

    munin-node-configure --families=contrib --suggest --shell
    ...

  The following shows example settings for this plugin:

    [oracle_sysstat_*]
      user  oracle
      env.oracle_auth  / as SYSDBA
      env.ORACLE_HOME  /path/to/oracle/product/version
      env.ORACLE_SID   SOMESID

=head1 NOTES

  Uses the command "sqlplus".
  Tested with Oracle Database 12c R1.

=head1 AUTHOR

  K.Cima https://github.com/shakemid

=head1 LICENSE

  GPLv2

=cut

# Magic markers
#%# family=contrib
#%# capabilities=autoconf suggest

. $MUNIN_LIBDIR/plugins/plugin.sh

# Environments
: ${ORACLE_HOME:=$( echo /opt/oracle/product/* )}
: ${ORACLE_SID:=orcl}
: ${oracle_auth:=/ as SYSDBA}

PATH=$PATH:$ORACLE_HOME/bin
export PATH ORACLE_HOME ORACLE_SID

# Module name
module=$( basename $0 | sed -e 's/^.*_//' )

# Graph settings
declare -A global_attrs
declare -A data_attrs  # field type draw 'label'
declare -A getfield_func
declare -A getvalue_func

key=cursor
global_attrs[$key]="\
    graph_title Oracle Open Cursors
    graph_category db
    graph_args --base 1000 --lower-limit 0 --rigid
    graph_vlabel Count
    graph_info Oracle Open Cursors "
data_attrs[$key]="\
    open_cursor GAUGE LINE 'Open Cursors' "
getvalue_func[$key]=getvalue_sysstat

key=execute
global_attrs[$key]="\
    graph_title Oracle Execute Count
    graph_category db
    graph_args --base 1000 --lower-limit 0 --rigid
    graph_vlabel Count
    graph_info Oracle Execute Count "
data_attrs[$key]="\
    execute_count    DERIVE LINE 'execute count'
    user_calls       DERIVE LINE 'user calls'
    recursive_calls  DERIVE LINE 'recursive calls' "
getvalue_func[$key]=getvalue_sysstat

key=parse
global_attrs[$key]="\
    graph_title Oracle Parse Count
    graph_category db
    graph_args --base 1000 --lower-limit 0 --rigid
    graph_vlabel Count
    graph_info Oracle Parse Count "
data_attrs[$key]="\
    user_calls            DERIVE LINE 'user calls'
    parse_count_total     DERIVE LINE 'parse count (total)'
    parse_count_hard      DERIVE LINE 'parse count (hard)'
    parse_count_failures  DERIVE LINE 'parse count (failures)'
    parse_count_describe  DERIVE LINE 'parse count (describe)' "
getvalue_func[$key]=getvalue_sysstat

key=physicaliops
global_attrs[$key]="\
    graph_title Oracle Physical I/O Requests
    graph_category db
    graph_args --base 1000 --lower-limit 0 --rigid
    graph_vlabel iops
    graph_info Oracle Physical I/O Requests "
data_attrs[$key]="\
    physical_read_total        DERIVE LINE2 'physical read total IO requests'
    physical_read              DERIVE LINE  'physical read IO requests'
    physical_read_total_multi  DERIVE LINE  'physical read total multi block requests'
    physical_write_total       DERIVE LINE2 'physical write total IO requests'
    physical_write             DERIVE LINE  'physical write IO requests'
    physical_write_total_multi DERIVE LINE  'physical write total multi block requests' "
getvalue_func[$key]=getvalue_sysstat

key=physicalrw
global_attrs[$key]="\
    graph_title Oracle Physical Read/Write
    graph_category db
    graph_args --base 1024 --lower-limit 0 --rigid
    graph_vlabel Bytes per second
    graph_info Oracle Physical Read/Write "
data_attrs[$key]="\
    physical_read_total  DERIVE LINE2 'physical read total bytes'
    physical_read        DERIVE LINE  'physical read bytes'
    physical_write_total DERIVE LINE2 'physical write total bytes'
    physical_write       DERIVE LINE  'physical write bytes'"
getvalue_func[$key]=getvalue_sysstat

key=sort
global_attrs[$key]="\
    graph_title Oracle Sorts
    graph_category db
    graph_args --base 1000 --lower-limit 0 --rigid
    graph_vlabel Count
    graph_info Oracle Sorts "
data_attrs[$key]="\
    sorts_memory DERIVE LINE 'sorts (memory)'
    sorts_disk   DERIVE LINE 'sorts (disk)' "
getvalue_func[$key]=getvalue_sysstat

key=tablescan
global_attrs[$key]="\
    graph_title Oracle Table Scans
    graph_category db
    graph_args --base 1000 --lower-limit 0 --rigid
    graph_vlabel Count
    graph_info Oracle Table Scans "
data_attrs[$key]="\
    table_scans_short_tables DERIVE LINE 'table scans (short tables)'
    table_scans_long_tables  DERIVE LINE 'table scans (long tables)' "
getvalue_func[$key]=getvalue_sysstat

key=transaction
global_attrs[$key]="\
    graph_title Oracle Transactions
    graph_category db
    graph_args --base 1000 --lower-limit 0 --rigid
    graph_vlabel Count per second
    graph_info Oracle Transactions "
data_attrs[$key]="\
    user_commits   DERIVE LINE 'user commits'
    user_rollbacks DERIVE LINE 'user rollbacks' "
getvalue_func[$key]=getvalue_sysstat

key=sgainfo
global_attrs[$key]="\
    graph_title Oracle SGA Statistics
    graph_category db
    graph_args --base 1024 --lower-limit 0 --rigid
    graph_vlabel Bytes
    graph_info Oracle SGA Statistics "
data_attrs[$key]="\
    maximum_sga_size    GAUGE LINE      'Maximum SGA Size'
    fixed_sga_size      GAUGE AREASTACK 'Fixed SGA Size'
    redo_buffers        GAUGE AREASTACK 'Redo Buffers'
    in-memory_area_size GAUGE AREASTACK 'In-Memory Area Size'
    shared_pool_size    GAUGE AREASTACK 'Shared Pool Size'
    large_pool_size     GAUGE AREASTACK 'Large Pool Size'
    java_pool_size      GAUGE AREASTACK 'Java Pool Size'
    streams_pool_size   GAUGE AREASTACK 'Streams Pool Size'
    shared_io_pool_size GAUGE AREASTACK 'Shared IO Pool Size'
    buffer_cache_size   GAUGE AREASTACK 'Buffer Cache Size' "
getvalue_func[$key]=getvalue_sgainfo

key=pgastat
global_attrs[$key]="\
    graph_title Oracle PGA Statistics
    graph_category db
    graph_args --base 1024 --lower-limit 0 --rigid
    graph_vlabel Bytes
    graph_info Oracle PGA Statistics "
data_attrs[$key]="\
    pga_target    GAUGE LINE 'aggregate PGA auto target'
    pga_allocated GAUGE LINE 'total PGA allocated'
    pga_inuse     GAUGE AREA 'total PGA inuse' "
getvalue_func[$key]=getvalue_pgastat

key=cachehit
global_attrs[$key]="\
    graph_title Oracle Cache Hit Ratio
    graph_category db
    graph_args --base 1000 --lower-limit 0 --upper-limit 100 --rigid
    graph_vlabel %
    graph_info Oracle Cache Hit Ratio
    graph_scale no "
data_attrs[$key]="\
    buf_hitratio  GAUGE LINE 'Buffer Cache Hit Ratio'
    lib_hitratio  GAUGE LINE 'Library Cache Hit Ratio'
    dict_hitratio GEUGE LINE 'Dictionary Cache Hit Ratio' "
getvalue_func[$key]=getvalue_cachehit

key=tablespace
global_attrs[$key]="\
    graph_title Oracle Table Space Usage
    graph_category db
    graph_args --base 1000 --lower-limit 0 --upper-limit 100 --rigid
    graph_vlabel %
    graph_info Oracle Table Space Usage
    warning ${warning:=90}
    critical ${critical:=95} "
data_attrs[$key]=""
getfield_func[$key]=getfield_tablespace
getvalue_func[$key]=getvalue_tablespace

# End of Graph Settings

# sqlplus options
: ${sqlplus:=sqlplus}
: ${sqlplus_opts:=-S}
sqlplus_variables="\
    set pagesize 0
    set feed off
    set head off
    set linesize 256
    set numwidth 30 "

# functions 

autoconf() {
    if [ -x "$( which ${sqlplus} )" ]; then
        echo yes
    else
        echo "no (failed to find executable 'sqlplus')"
    fi
    exit 0
}

suggest() {
    echo ${!global_attrs[@]} | tr ' ' '\n' | sort
    exit 0
}

config() {
    cat <<EOF | sed -e 's/^  *//'
${global_attrs[$module]}
EOF

    local line t fields field type draw label
    while read line
    do
        eval t=( "${line}" )
        field="${t[0]}"
        fields+=( $field )
        type="${t[1]}"
        draw="${t[2]}"
        label="${t[3]}"

        if [ -z "$field" ]; then
            continue
        fi

        echo ${field}.type  ${type}
        echo ${field}.draw  ${draw}
        echo ${field}.label ${label}
    done < <( cat <<EOF
${data_attrs[$module]}
EOF
)

    echo graph_order ${fields[@]}

    exit 0
}

getfield() {
    if [ -n "${getfield_func[$module]}" ]; then
        ${getfield_func[$module]}
    fi
}

getvalue() {
    ${getvalue_func[$module]}
    exit 0
}

getvalue_sysstat() {
    local line t field label
    while read line
    do
        eval t=( "${line}" )
        field="${t[0]}"
        label="${t[3]}"

        ${sqlplus} "${sqlplus_opts}" "${oracle_auth}" <<EOF
${sqlplus_variables}
SELECT
  '${field}.value ' || value
FROM
  v\$sysstat
WHERE
  name = '${label}';
EOF
    done < <( cat <<EOF
${data_attrs[$module]}
EOF
)
}

getvalue_sgainfo() {
    local line t field label
    while read line
    do
        eval t=( "${line}" )
        field="${t[0]}"
        label="${t[3]}"

        ${sqlplus} "${sqlplus_opts}" "${oracle_auth}" <<EOF
${sqlplus_variables}
SELECT
  '${field}.value ' || bytes
FROM
  v\$sgainfo
WHERE
  name = '${label}';
EOF
    done < <( cat <<EOF
${data_attrs[$module]}
EOF
)
}

getvalue_pgastat() {
    local line t field label
    while read line
    do
        eval t=( "${line}" )
        field="${t[0]}"
        label="${t[3]}"

        ${sqlplus} "${sqlplus_opts}" "${oracle_auth}" <<EOF
${sqlplus_variables}
SELECT
  '${field}.value ' || value
FROM
  v\$pgastat
WHERE
  name = '${labels[$i]}';
EOF
        i=$((i+1))
    done < <( cat <<EOF
${data_attrs[$module]}
EOF
)
}

getvalue_cachehit() {
    ${sqlplus} "${sqlplus_opts}" "${oracle_auth}" <<EOF
${sqlplus_variables}
SELECT
  'buf_hitratio.value ' || round( ( 1 - a.value / ( b.value + c.value ) ) * 100 )
FROM
  v\$sysstat a, v\$sysstat b, v\$sysstat c
WHERE
  a.name = 'physical reads' AND
  b.name = 'db block gets' AND
  c.name = 'consistent gets';
EOF

    ${sqlplus} "${sqlplus_opts}" "${oracle_auth}" <<EOF
${sqlplus_variables}
SELECT
  'lib_hitratio.value ' || round( sum(pins) / ( sum(pins) + sum(reloads) ) * 100 )
FROM
  v\$librarycache;
EOF

    ${sqlplus} "${sqlplus_opts}" "${oracle_auth}" <<EOF
${sqlplus_variables}
SELECT
  'dict_hitratio.value ' || round( ( 1 - sum(getmisses) / sum(gets) ) * 100 )
FROM
  v\$rowcache;
EOF
}

getfield_tablespace() {
    local type_default=GAUGE
    local draw_default=LINE

    local line
    while read line
    do
        data_attrs[$key]="${data_attrs[$key]}
        $line ${type_default} ${draw_default} $line "
    done < <( ${sqlplus} "${sqlplus_opts}" "${oracle_auth}" <<EOF
${sqlplus_variables}
SELECT
   regexp_replace( tablespace_name, '^[^A-Za-z_]|[^A-Za-z0-9_]', '_' )
FROM
   dba_data_files
ORDER BY
   tablespace_name;
EOF
)
}

getvalue_tablespace() {
    ${sqlplus} "${sqlplus_opts}" "${oracle_auth}" <<EOF
${sqlplus_variables}
SELECT
  regexp_replace( tablespace_name, '^[^A-Za-z_]|[^A-Za-z0-9_]', '_' ) || '.value ' ||
  round( (total_bytes - free_total_bytes) / total_bytes * 100, 0 )
FROM
  ( SELECT
      tablespace_name,
      sum(bytes) total_bytes
    FROM
      dba_data_files
    GROUP BY
      tablespace_name
  ),
  ( SELECT
      tablespace_name free_tablespace_name,
      sum(bytes) free_total_bytes
    FROM
      dba_free_space
    GROUP BY
      tablespace_name
  )
WHERE
  tablespace_name = free_tablespace_name;
EOF
}

# main
case $1 in
autoconf)
    autoconf
    ;;
suggest)
    suggest
    ;;
config)
    getfield
    config
    ;;
*)
    getfield
    getvalue
    ;;
esac
