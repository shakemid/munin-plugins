#!/bin/bash
# -*- sh -*-

: << =cut

=head1 NAME

  oracle_event_wait - Munin plugin to monitor Oracle Wait Event Statistics

=head1 CONFIGURATION

  The following shows example settings for this plugin:

  [oracle_*]
     user  oracle
     env.oracle_auth  / as SYSDBA
     env.ORACLE_HOME  /path/to/oracle/product/version
     env.ORACLE_SID   SOMESID

=head1 NOTES

  Uses the command "sqlplus".
  Tested with Oracle Database 12c R1.

  It may looks wierd that Y-axis indicates "microseconds per second".  Although
  number of times of wait event looks easier to understand, in many cases the 
  number of events does not matter, but wait time become more important to 
  analyze bottle necks.

=head1 AUTHOR

  K.Cima https://github.com/shakemid

=head1 LICENSE

  GPLv2

=cut

# Magic markers
#%# family=contrib
#%# capabilities=autoconf

. $MUNIN_LIBDIR/plugins/plugin.sh

# Environments
: ${oracle_auth:=/ as SYSDBA}
: ${ORACLE_SID:=orcl}
: ${ORACLE_HOME:=$( echo /opt/oracle/product/* )}

PATH=$PATH:$ORACLE_HOME/bin
export PATH ORACLE_HOME ORACLE_SID

# Graph settings
fields=()
labels=() 
types=()
draws=()
type_default=DERIVE
draw_default=LINE

clean_fieldname2() {
    local temp=$( echo "$@" | tr '[A-Z]' '[a-z]' | sed -e 's/[^a-z0-9_ ]//g' )
    echo $( clean_fieldname "$temp" )
}

autoconf() {
    if [ -x $( which sqlplus ) ]; then
        echo yes
    else
        echo no
    fi
    exit 0
}

config() {
    echo graph_title Oracle Wait Event
    echo graph_info Oracle Wait Event
    echo graph_category Oracle
    echo graph_args --base 1000 --lower-limit 0 --rigid
    echo graph_vlabel microseconds
    #echo graph_scale no
    echo graph_order ${fields[@]}

    local i=0
    local field
    for field in ${fields[@]}
    do
        echo ${field}.label ${labels[$i]}
        echo ${field}.type  ${types[$i]}
        echo ${field}.draw  ${draws[$i]}
        i=$((i+1))
    done
 
    exit 0
}

getfield() {
    local line
    while read line
    do
        fields+=( wait_$( clean_fieldname2 $line ) )
        labels+=( "$line" )
        types+=( $type_default )
        draws+=( $draw_default )
    done < <( sqlplus -s ${oracle_auth} <<EOF | grep -v '^$'
set pagesize 0
set linesize 256
set numwidth 30
set feedback off
SELECT 
  wait_class
FROM
  v\$event_name
WHERE
  wait_class != 'Idle'
GROUP BY
  wait_class
ORDER BY
  wait_class;
EOF
)

}

getvalue() {
    local i=0
    local field
    for field in ${fields[@]}
    do
        sqlplus -s ${oracle_auth} <<EOF | grep -v '^$'
set pagesize 0
set linesize 256
set numwidth 30
set feedback off
SELECT 
  '${field}.value ' || sum(time_waited_micro)
FROM
  v\$system_event
WHERE
  wait_class = '${labels[$i]}';
EOF
        i=$((i+1))
    done
  
    exit 0
}

# main
case $1 in
autoconf)
    autoconf
    ;;
config)
    getfield
    config
    ;;
*)
    getfield
    getvalue
    ;;
esac
